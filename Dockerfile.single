# Single Dockerfile to run the complete Mid-Day Meal application
FROM maven:3.8-openjdk-17 AS backend-build

# Build Backend
WORKDIR /app/backend
COPY backend/pom.xml .
RUN mvn dependency:go-offline -B
COPY backend/src ./src
RUN mvn clean package -DskipTests

# Frontend Build Stage
FROM node:18-alpine AS frontend-build
WORKDIR /app/frontend
COPY frontend-web/package*.json ./
RUN npm install
COPY frontend-web/ ./
RUN npm run build

# Final Runtime Stage
FROM eclipse-temurin:17-jre

# Install nginx and curl
RUN apt-get update && \
    apt-get install -y nginx curl && \
    rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy backend JAR
COPY --from=backend-build /app/backend/target/midday-meal-backend-1.0.0.jar backend.jar

# Copy frontend build to nginx
COPY --from=frontend-build /app/frontend/build /var/www/html

# Configure nginx
COPY nginx/nginx.conf /etc/nginx/nginx.conf

# Create startup script
RUN echo '#!/bin/bash\n\
# Start nginx in background\n\
nginx &\n\
\n\
# Start backend application\n\
java -jar backend.jar\n\
' > /app/start.sh && chmod +x /app/start.sh

# Expose ports
EXPOSE 80 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8080/api/actuator/health || exit 1

# Start both services
CMD ["/app/start.sh"]